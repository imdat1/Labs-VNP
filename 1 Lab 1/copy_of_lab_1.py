# -*- coding: utf-8 -*-
"""Copy of Lab_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jTzj5_VP2cK5SlL4g00IosjhO84XGz_C

#<font color = 'Orange'>Scraping page</font>
You need to scrape the phones with their price from: https://mobelix.com.mk/mk/mobilni-telefoni

The informations you need to extract are:


*   Phone brand: html tag (\<h5 class="mb-0">\)
*   Phone type: html tag (\<h3 class="h5 font-weight-normal">\)
*   Phone price: html tag (\<p class="h5 price">\)

# <font color='Orange'>Requirements specified for Web Scraping</font> (0.1 POINTS)

Import all libraries and modules that you are going to use.
"""

# Commented out IPython magic to ensure Python compatibility.
#start here
#shift+enter in this box will run the code that's here and open a new code-box below
#import ....
import numpy as np
import pandas as pd
import requests
import warnings
from bs4 import BeautifulSoup
from IPython.display import HTML
# %matplotlib inline
import matplotlib.pyplot as plt

requests.packages.urllib3.disable_warnings()
warnings.filterwarnings("ignore")



"""# <font color = 'Orange'> Start the scraping by sending HTTP request</font> (0.3 POINTS)

**Fetch a website's content - send request**
"""

#add your code
mobelix_url = 'https://mobelix.com.mk/mk/mobilni-telefoni'
mobelix_request = requests.get(mobelix_url)

"""**Get the response-status code and see:**
<li>If the code starts with a 2, it means the request was successful.


"""

#add your code
mobelix_request

"""# <font color = 'orange'>Parse the HTML with BeautifulSoup</font> (0.3 POINTS)

Beautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree. It commonly saves programmers hours or days of work.

**Parse using BeautifulSoap**
"""

#add your code
mobelix_html_text = mobelix_request.text
mobelix_soup = BeautifulSoup(mobelix_html_text,'html.parser')

"""**Print the HTML code that you get**"""

#add your code
mobelix_soup

"""# <font color='Orange'>Extracting data</font> (0.7 POINTS)

From the printed HTML code search for the data you need for building the dataset, by the classes that are given above in the html tags listed.

**Try to select the first element from your attributes. Find out from the html code what part do you need.**
"""

#add your code **PHONE BRANDS**
phone_brands = mobelix_soup.select('h5.mb-0')
phone_brands = [p.text for p in mobelix_soup.select('h5.mb-0')] #PRETVARANJE VO TEXT

num_phoneBrands=len(phone_brands)
HTML(phone_brands[6]) #testing

"""**Add as many codeboxes as you need for selecting all the html elements**"""

#add your code **TYPES**
phone_type = mobelix_soup.select('h3.h5.font-weight-normal')
phone_type = [p.text for p in mobelix_soup.select('h3.h5.font-weight-normal')] #PRETVARANJE VO TEXT

num_phoneTypes = len(phone_type)
HTML(phone_type[6]) #testing

from numpy.core.numeric import base_repr
#add your code **PRICE**
for mr_2 in mobelix_soup.select('.mr-2'):
    mr_2.decompose() #REMOVE STARI PRECKRTANI CENI
for br in mobelix_soup.select('br'):
    br.decompose() #REMOVE BR

phone_price = mobelix_soup.select('p.h5.price')
phone_price = [p.text for p in mobelix_soup.select('p.h5.price')] #PRETVARANJE VO TEKST

for i in range(0,num_phonePrices):
  phone_price[i] = phone_price[i].replace(",","")
  phone_price[i] = phone_price[i].replace("ден","")
  phone_price[i] = float(phone_price[i])

num_phonePrices = len(phone_price)
phone_price[6]

"""**Create lists with the extracted data from the html elements that you selected**"""

#add your code
phoneBrand_list = []
phoneType_list = []
phonePrice_list = []

for i in range(0,num_phoneBrands):
  phoneBrand_list.append(phone_brands[i])

for i in range(0,num_phoneTypes):
  phoneType_list.append(phone_type[i])

for i in range(0,num_phonePrices):
  phonePrice_list.append(phone_price[i])

"""**Print all lists that are containing the elements**"""

#add your code
print(phoneBrand_list)
print(phoneType_list)
print(phonePrice_list)

"""**Check if all lists are the same size**"""

print(num_phoneBrands)
print(num_phoneTypes)
print(num_phonePrices)

"""# <font color='Orange'>Create a Pandas DataFrame</font> (0.1 POINTS)

**Create the DataFrame from the lists you get and name your *Columns***
"""

#add your code
phones_matrix = []
for i in range(num_phoneTypes):
  node = {}
  node['Brand'] = phone_brands[i]
  node['Type'] = phone_type[i]
  node['Price'] = phone_price[i]
  phones_matrix.append(node)

phones_Dataframe = pd.DataFrame(phones_matrix)

from google.colab import drive
drive.mount('/content/drive')

"""**Print the dataset you obtain**"""

#add your code
phones_Dataframe.to_csv("/content/drive/My Drive/Colab Notebooks/MobelixPhones.csv", index = False)
phones_Dataframe

"""#<font color='orange'>EDA</font> (0.2 POINTS)

## <font color='Orange'>Find statistic elements for the prices</font>
Like mean, median,  standard deviation, minimum, maximum
"""

phones_Dataframe.mean()

phones_Dataframe.median()

phones_Dataframe.std()

phones_Dataframe.min()

phones_Dataframe.max()

"""# <font color = 'Orange'>Data visualization </font> (0.3 POINTS)

Make a histogram & bar chart for the price values
"""

#add your code
phones_Dataframe.hist()

fig = plt.figure()
phones_Dataframe.plot.bar(rot=0,figsize=(50,5))
fig.show()